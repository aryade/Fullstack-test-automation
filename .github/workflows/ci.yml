name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache backend dependencies
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}

    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Run backend tests
      run: |
        cd backend
        npm test

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache frontend dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Run frontend tests
      run: |
        cd frontend
        npm test

  ui-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Set up Python virtual environment
      run: |
        cd frontend/ui-tests
        python -m venv venv
        source venv/bin/activate

    - name: Install Python dependencies
      run: |
        cd frontend/ui-tests
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install --with-deps

    - name: Run UI tests
      run: |
        cd frontend/ui-tests
        source venv/bin/activate
        pytest

    - name: Start backend server
      run: |
        cd backend
        nohup npm start &
      env:
        PORT: 4000

    - name: Wait for backend to be ready
      run: |
        sleep 5

    - name: Run UI tests
      run: |
        cd frontend/ui-tests
        pytest

    - name: Upload Playwright screenshots
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-screenshots
        path: frontend/ui-tests/*.png
